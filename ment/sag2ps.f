C
C       SUBSET OF SAG2W FOR Postscript-PRINTER OUTPUT
C       Compiled by (Urs Rohrer, OCT. 1990)
C
C
	SUBROUTINE CPLOTPS(X,Y)
C
C	PLOTS A CURVE, DOES NOT DRAW THE GRID
C
	COMMON /GRAPH/ N,XA,XE,YA,YE,ILT,ISYM,IFRE
	COMMON /SCAL/ XSCAL,YSCAL,XMIN,YMIN,XMAX,YMAX
	COMMON /LOGLIN/ LX,LY
	COMMON /TEXT1/ IM
	COMMON /OLD/ KLT
	COMMON / TEKT / MINX,MAXX,MINY,MAXY,LCHX,LCHY,SCALX,SCALY
	REAL            MINX,MAXX,MINY,MAXY,LCHX,LCHY,SCALX,SCALY
	DIMENSION X(1),Y(1)
	DATA IM /0/
C
	IF (IFRE .EQ. 0) IFRE = 10000
C
C	DRAW THE CURVE (ILT .LT. 0 NO CURVE)
C
	IF (ILT .GE. 0) THEN
	 DO J = 1, N
	  XP = XA + XSCAL * (X(J) - XMIN)
	   IF (LX .EQ. 2) XP = XA + XSCAL*(LOG10(X(J))-LOG10(XMIN))
	  YP = YA + YSCAL * (Y(J) - YMIN)
	   IF (LY .EQ. 2) YP = YA + YSCAL*(LOG10(Y(J))-LOG10(YMIN))
	   IF (J .EQ. 1) THEN
	    CALL PSMOV(XP*SCALX,YP*SCALY)
	   ELSE
	    CALL PSDRW(XP*SCALX,YP*SCALY)
	   ENDIF
	 ENDDO
	ENDIF
C
C	DRAW POINTS WITH INCREMENT IFRE (ISYM .EQ. 0 --> NO POINTS)
C
	IF (ISYM .NE. 0) THEN
	 DO J = 1, N
	 IM = IM + 1
	  IF (MOD(IM, IFRE) .EQ. 0) THEN
	   XP = XA + XSCAL * (X(J) - XMIN)
	    IF (LX .EQ. 2) XP = XA + XSCAL*(LOG10(X(J))-LOG10(XMIN))
	   YP = YA + YSCAL * (Y(J) - YMIN)
	    IF (LY .EQ. 2) YP = YA + YSCAL*(LOG10(Y(J))-LOG10(YMIN))
C
C	   DRAW "X"
C
	   IF (ISYM .EQ. 2) THEN
	    CALL PSMOV(SCALX*(XP-.12),SCALY*(YP+.12))
	    CALL PSDRW(SCALX*(XP+.12),SCALY*(YP-.12))
	    CALL PSMOV(SCALX*(XP+.12),SCALY*(YP+.12))
	    CALL PSDRW(SCALX*(XP-.12),SCALY*(YP-.12))
C
C	   DRAW SQUARE
C
	   ELSE IF (ISYM .EQ. 4) THEN
	    CALL PSMOV(SCALX*(XP-.12),SCALY*(YP-.12))
	    CALL PSDRW(SCALX*(XP+.12),SCALY*(YP-.12))
	    CALL PSDRW(SCALX*(XP+.12),SCALY*(YP+.12))
	    CALL PSDRW(SCALX*(XP-.12),SCALY*(YP+.12))
	    CALL PSDRW(SCALX*(XP-.12),SCALY*(YP-.12))
C
C	   DRAW "+"
C
	   ELSE IF (ISYM .EQ. 8) THEN
	    CALL PSMOV(SCALX*XP,SCALY*(YP-.12))
	    CALL PSDRW(SCALX*XP,SCALY*(YP+.12))
	    CALL PSMOV(SCALX*(XP-.12),SCALY*YP)
	    CALL PSDRW(SCALX*(XP+.12),SCALY*YP)
C
C	   DRAW ADE-CHARACTER
C
	   ELSE
	    CALL PSTEXT(XP*SCALX,YP*SCALY,CHAR(ISYM))
	   ENDIF
	  ENDIF
	 ENDDO
	ENDIF
C
	KLT = ILT
	RETURN
	END
C
	SUBROUTINE DSPLAYPS(X,Y)
C
C	DISPLAYS THE COMPLETE GRAPH ON THE SCREEN
C
	COMMON /GRAPH/ N,XA,XE,YA,YE,ILT,ISYM,IFRE
	COMMON /SCAL/ XSCAL,YSCAL,XMIN,YMIN,XMAX,YMAX
	COMMON /AXIS/ ITX,ITY,IDX,IDY,NCX,NCY,MCX,MCY
	COMMON /LOGLIN/ LX,LY
	COMMON /DASH/ MD
	COMMON / TEKT / MINX,MAXX,MINY,MAXY,LCHX,LCHY,SCALX,SCALY
	REAL            MINX,MAXX,MINY,MAXY,LCHX,LCHY,SCALX,SCALY
	DIMENSION X(1),Y(1)
C
	XS = 0.78 * LCHX * 1.2
	YS = 0.78 * LCHX
C
C	DRAW CURVE
C
	CALL CPLOTPS(X,Y)
	CALL PSLINEX(1)
C
C	VERTICAL BARS OF THE GRID
C
	XT = (XE-XA) / FLOAT(ITX-1)
	K = ITX / 7 + 1
	DO I = 1, ITX
	 IF (K*((I+K-1)/K)-I-K+1.EQ.0 .OR. I.EQ.ITX) THEN
	  CALL PSMOV((XA+FLOAT(I-1)*XT)*SCALX,YA*SCALY)
	  CALL PSDRW((XA+FLOAT(I-1)*XT)*SCALX,YE*SCALY)
	 ENDIF
	ENDDO
C
C	HORIZONTAL BARS OF THE GRID
C
	YT = (YE-YA) / FLOAT(ITY-1)
	K = ITY / 7 + 1
	DO I = 1, ITY
	 IF (K*((I+K-1)/K)-I-K+1.EQ.0 .OR. I.EQ.ITY) THEN
	  CALL PSMOV(XA*SCALX,(YA+FLOAT(I-1)*YT)*SCALY)
	  CALL PSDRW(XE*SCALX,(YA+FLOAT(I-1)*YT)*SCALY)
	 ENDIF
	ENDDO
	CALL PSLINEX(0)
C
	XINC = (XMAX-XMIN) / FLOAT(ITX-1)
	YINC = (YMAX-YMIN) / FLOAT(ITY-1)
C
C	LABELS FOR THE HORIZONTAL AXIS
C
	K = ITX / 7 + 1
	DO I = 1, ITX
	 XOUT = XMIN + FLOAT(I-1) * XINC
	  IF (LX .EQ. 2) XOUT = XMIN * .32**FLOAT(I-1)
C
C	RECALCULATE NUMBER OF DIGITS AFTER DECIMAL POINT FOR LOG-SCALE
C
	 IF (LX .EQ .2) THEN
	  XX = LOG10(XOUT)
	   IF (XX .EQ. 0.0) XX = .1
	  IND = NINT(XX)
	  NCX = -IND
	   IF (IND .EQ. 0) NCX = 1
	   IF (IND .GT. 0) NCX = -1
	  MCX = IND + 1
	   IF (IND .EQ. 0) MCX = 3
	   IF (IND .LT. 0) MCX =IABS(IND) + 2
	 ENDIF
C
	 IF(K*((I+K-1)/K)-I-K+1 .EQ. 0) THEN
	  XXX = XA + FLOAT(I-1) * XT
	  IF (I .EQ. ITX) THEN
	   XXX = XXX  - FLOAT(MCX) * .625 * LCHX *.9 
	  ELSE
	   XXX = XXX  - FLOAT(MCX) * .312 * LCHX *.9
	  ENDIF
	  CALL RENOUTPS(XOUT,NCX,MCX,XXX,YA-1.66*LCHY*1.1)
	 ENDIF
	ENDDO
C
C	LABELS FOR THE VERTICAL AXIS
C
	K = ITY / 7 + 1
	DO I = 1, ITY
	 YOUT = YMIN + FLOAT(I-1) * YINC
	  IF (LY .EQ. 2) YOUT = YMIN * 10.**FLOAT(I-1)
C
C	RECALCULATE NUMBER OF DIGITS AFTER DECIMAL POINT FOR LOG-SCALE
C
	 IF (LY .EQ. 2) THEN
	  YY = LOG10(YOUT)
	   IF (YY .EQ. 0.0) YY = .1
	  IND = NINT(YY)
	  NCY = -IND
	   IF (IND .EQ. 0) NCY = 1
	   IF (IND .GT. 0) NCY = -1
	  MCY = IND + 1
	   IF (IND .EQ. 0) MCY = 3
	   IF (IND .LT. 0) MCY = IABS(IND) + 2
	 ENDIF
C
	 IF(K*((I+K-1)/K)-I-K+1 .EQ. 0) THEN
	  XXX = XA - (3.5 + FLOAT(MCY)) * XS
	  CALL RENOUTPS(YOUT,NCY,MCY,XXX,YA + FLOAT(I-1)*YT)
	 ENDIF
	ENDDO
C
C	TICS FOR THE HORIZONTAL AXIS
C
	IF (LX .NE. 2) THEN
	 DO I = 1, 1+IDX*(ITX-1)
	  CALL PSMOV((XA+FLOAT(I-1)*XT/FLOAT(IDX))*SCALX,(YA-YS)*SCALY)
	  CALL PSDRW((XA+FLOAT(I-1)*XT/FLOAT(IDX))*SCALX,YA*SCALY)
	 ENDDO
	ELSE
	 DO I = 1, ITX-1
	  DO J = 1, IDX
	   CALL PSMOV((XA+FLOAT(I-1)*XT+LOG10(FLOAT(J))*XT)*SCALX,
     *                 (YA-YS)*SCALY)
	   CALL PSDRW((XA+FLOAT(I-1)*XT+LOG10(FLOAT(J))*XT)*SCALX,
     *                  YA*SCALY)
	  ENDDO
	 ENDDO
	ENDIF
C
C	TICS FOR THE VERTICAL AXIS
C
	IF (LY .NE. 2) THEN
	 DO I = 1, 1 + IDY * (ITY-1)
	  CALL PSMOV((XA-XS)*SCALX,(YA+FLOAT(I-1)*YT/FLOAT(IDY))*SCALY)
	  CALL PSDRW(XA*SCALX,(YA+FLOAT(I-1)*YT/FLOAT(IDY))*SCALY)
	 ENDDO
	ELSE
   61	 DO I = 1, ITY - 1
	  DO J = 1, IDY
	   CALL PSMOV((XA-XS)*SCALX,
     *          (YA+FLOAT(I-1)*YT+LOG10(FLOAT(J))*YT)*SCALY)
	   CALL PSDRW(XA*SCALX,
     *          (YA+FLOAT(I-1)*YT+LOG10(FLOAT(J))*YT)*SCALY)
	  ENDDO
	 ENDDO
	ENDIF
	RETURN
	END
C
	SUBROUTINE RENOUTPS(RN,INDK,NCH,X,Y)
C
C	OUTPUT REAL NUMBER STARTING AT POSITION (X/Y = LOWER LEFT CORNER)
C
	COMMON / TEKT / MINX,MAXX,MINY,MAXY,LCHX,LCHY,SCALX,SCALY
	REAL            MINX,MAXX,MINY,MAXY,LCHX,LCHY,SCALX,SCALY
	CHARACTER*20 WORD
	CHARACTER*10 FORM1, FORM2
	DATA FORM1 /'(F9.1)'/
	DATA FORM2 /'(I9)'/
C
	IF (INDK .GE. 0) THEN
	 WRITE(FORM1(3:3),1000) NCH
	 WRITE(FORM1(5:5),1001) INDK
1000	 FORMAT(I1)
	 WRITE(WORD(1:NCH),FORM1) RN
	ELSE
	 WRITE(FORM2(3:3),1001) NCH
1001	 FORMAT(I1)
	 WRITE(WORD(1:NCH),FORM2) NINT(RN)
	ENDIF
	IF (RN .GE. 0.0) THEN
	 XP = X + LCHX		! COMPENSATION FOR MINUS SIGN
	ELSE
	 XP = X
	ENDIF
C
C	SUPPRESS LEADING BLANKS LIKE IN GRAPHX
C
	DO 10 J = 1, NCH
	 IF (WORD(J:J) .NE. ' ') GO TO 20
10	CONTINUE
20	CONTINUE
	CALL PSTEXT(XP*SCALX,Y*SCALY,WORD(J:NCH))
	RETURN
	END
C
	SUBROUTINE TIMDSPS(X,Y)
C
C	DISPLAY DATE AND TIME AT LOWER LEFT POSITION (X,Y = LOWER LEFT CORNER)
C
	COMMON / TEKT / MINX,MAXX,MINY,MAXY,LCHX,LCHY,SCALX,SCALY
	REAL            MINX,MAXX,MINY,MAXY,LCHX,LCHY,SCALX,SCALY
	COMMON /TIMDSP/ ITDFLAG
C
        CHARACTER TIM*9, DAT*10

        CALL MYTIME(TIM)
        CALL MYDATE(DAT)
C
	CALL PSTEXT(X*SCALX,Y*SCALY,TIM(1:8))
	N = 1
	IF (DAT(1:1) .EQ. ' ') N = 2
        CALL PSTEXT(X*SCALX,(Y+LCHY)*SCALY,DAT(N:9))
C
	RETURN
	END
